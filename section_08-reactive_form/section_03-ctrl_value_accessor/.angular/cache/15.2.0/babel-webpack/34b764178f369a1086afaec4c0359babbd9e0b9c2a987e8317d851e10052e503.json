{"ast":null,"code":"import { EventEmitter, forwardRef } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { CtrlsValueAccessorDirective } from \"../ctrls-value-accessor.directive\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ColorPickerComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵlistener(\"click\", function ColorPickerComponent_div_1_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const color_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.getCurrent(color_r1));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const color_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"background-color\", color_r1);\n  }\n}\nexport class ColorPickerComponent {\n  constructor() {\n    this.click = new EventEmitter();\n  }\n  writeValue(value) {\n    this.value = value;\n  }\n  registerOnChange(onChange) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  getCurrent(color) {\n    this.value = color;\n    if (this.onChange) {\n      this.onChange(color);\n    }\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n}\nColorPickerComponent.ɵfac = function ColorPickerComponent_Factory(t) {\n  return new (t || ColorPickerComponent)();\n};\nColorPickerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ColorPickerComponent,\n  selectors: [[\"color-picker\"]],\n  inputs: {\n    colors: \"colors\"\n  },\n  outputs: {\n    click: \"handleClick\"\n  },\n  standalone: true,\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CtrlsValueAccessorDirective),\n    multi: true\n  }]), i0.ɵɵStandaloneFeature],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"squares-container\"], [\"class\", \"square\", 3, \"background-color\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"square\", 3, \"click\"]],\n  template: function ColorPickerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ColorPickerComponent_div_1_Template, 1, 2, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.colors);\n    }\n  },\n  dependencies: [CommonModule, i1.NgForOf],\n  styles: [\".squares-container[_ngcontent-%COMP%] {\\n  height: 80px;\\n  width: 120px;\\n}\\n.squares-container[_ngcontent-%COMP%]   .square[_ngcontent-%COMP%] {\\n  height: 50%;\\n  width: 33.33%;\\n  display: block;\\n  float: left;\\n  cursor: pointer;\\n}\\n.squares-container[_ngcontent-%COMP%]   .square[_ngcontent-%COMP%]:hover {\\n  border: 3px solid dodgerblue;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tbW9uL2NvbG9yLXBpY2tlci9jb2xvci1waWNrZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0VBQ0EsWUFBQTtBQUNKO0FBRUk7RUFDSSxXQUFBO0VBQ0EsYUFBQTtFQUNBLGNBQUE7RUFDQSxXQUFBO0VBQ0EsZUFBQTtBQUFSO0FBRVE7RUFDSSw0QkFBQTtBQUFaIiwic291cmNlc0NvbnRlbnQiOlsiLnNxdWFyZXMtY29udGFpbmVyIHtcbiAgICBoZWlnaHQ6IDgwcHg7XG4gICAgd2lkdGg6IDEyMHB4O1xuICAgIC8vIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xuXG4gICAgLnNxdWFyZSB7XG4gICAgICAgIGhlaWdodDogNTAlO1xuICAgICAgICB3aWR0aDogMzMuMzMlO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGJvcmRlcjogM3B4IHNvbGlkIGRvZGdlcmJsdWU7XG4gICAgICAgIH1cbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAEIA,YAAY,EACZC,UAAU,QAGP,eAAe;AACtB,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAA+BC,iBAAiB,QAAQ,gBAAgB;AACxE,SAASC,2BAA2B,QAAQ,mCAAmC;;;;;;ICR3EC,8BAKC;IADGA;MAAA;MAAA;MAAA;MAAA,OAASA,0CAAiB;IAAA,EAAC;IAC9BA,iBAAM;;;;IAFHA,4CAAgC;;;ADqBxC,OAAM,MAAOC,oBAAoB;EAdjCC;IAgB2B,UAAK,GAAG,IAAIP,YAAY,EAAE;;EAKjDQ,UAAU,CAACC,KAAa;IACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EAEAC,gBAAgB,CAACC,QAAiC;IAC9C,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;EAEAC,iBAAiB,CAACC,EAAc;IAC5B,IAAI,CAACC,SAAS,GAAGD,EAAE;EACvB;EACAE,UAAU,CAACC,KAAa;IACpB,IAAI,CAACP,KAAK,GAAGO,KAAK;IAClB,IAAI,IAAI,CAACL,QAAQ,EAAE;MACf,IAAI,CAACA,QAAQ,CAACK,KAAK,CAAC;;IAExB,IAAI,IAAI,CAACF,SAAS,EAAE;MAChB,IAAI,CAACA,SAAS,EAAE;;EAExB;;AA1BSR,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAW;EAAAC;IAAAC;EAAA;EAAAC;IAAAC;EAAA;EAAAC;EAAAC,iCARlB,CACP;IACIC,OAAO,EAAErB,iBAAiB;IAC1BsB,WAAW,EAAExB,UAAU,CAAC,MAAMG,2BAA2B,CAAC;IAC1DsB,KAAK,EAAE;GACV,CACJ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCvBLzB,8BAA+B;MAC3BA,qEAKO;MACXA,iBAAM;;;MALoBA,eAAS;MAATA,oCAAS;;;iBDYrBH,YAAY;EAAA6B;AAAA","names":["EventEmitter","forwardRef","CommonModule","NG_VALUE_ACCESSOR","CtrlsValueAccessorDirective","i0","ColorPickerComponent","constructor","writeValue","value","registerOnChange","onChange","registerOnTouched","fn","onTouched","getCurrent","color","selectors","inputs","colors","outputs","click","standalone","features","provide","useExisting","multi","decls","vars","consts","template","styles"],"sourceRoot":"","sources":["/Users/valeriorisuleo/Desktop/Archive/src/app/common/color-picker/color-picker.component.ts","/Users/valeriorisuleo/Desktop/Archive/src/app/common/color-picker/color-picker.component.html"],"sourcesContent":["import {\n    Component,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { CtrlsValueAccessorDirective } from \"../ctrls-value-accessor.directive\";\n\n@Component({\n    selector: \"color-picker\",\n    standalone: true,\n    imports: [CommonModule],\n    templateUrl: \"./color-picker.component.html\",\n    styleUrls: [\"./color-picker.component.scss\"],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => CtrlsValueAccessorDirective),\n            multi: true,\n        },\n    ],\n})\nexport class ColorPickerComponent implements ControlValueAccessor {\n    @Input() colors: string[];\n    @Output(\"handleClick\") click = new EventEmitter();\n    private onChange: (value: string) => void;\n    private onTouched: () => void;\n    private value: string;\n\n    writeValue(value: string) {\n        this.value = value;\n    }\n\n    registerOnChange(onChange: (value: string) => void) {\n        this.onChange = onChange;\n    }\n\n    registerOnTouched(fn: () => void) {\n        this.onTouched = fn;\n    }\n    getCurrent(color: string) {\n        this.value = color;\n        if (this.onChange) {\n            this.onChange(color);\n        }\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n}\n","<div class=\"squares-container\">\n    <div\n        *ngFor=\"let color of colors\"\n        class=\"square\"\n        [style.background-color]=\"color\"\n        (click)=\"getCurrent(color)\"\n    ></div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}