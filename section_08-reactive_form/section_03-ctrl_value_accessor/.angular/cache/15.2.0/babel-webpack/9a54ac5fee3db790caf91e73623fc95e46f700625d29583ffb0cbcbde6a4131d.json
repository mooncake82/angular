{"ast":null,"code":"import { forwardRef } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nexport class CtrlsValueAccessorDirective {\n  constructor() {}\n  writeValue(value) {\n    this.value = value;\n  }\n  registerOnChange(onChange) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  updateValue(value) {\n    this.value = value;\n    if (this.onChange) {\n      this.onChange(this.value);\n    }\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n}\nCtrlsValueAccessorDirective.ɵfac = function CtrlsValueAccessorDirective_Factory(t) {\n  return new (t || CtrlsValueAccessorDirective)();\n};\nCtrlsValueAccessorDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: CtrlsValueAccessorDirective,\n  selectors: [[\"\", \"ctrlsValueAccessorDirective\", \"\"]],\n  standalone: true,\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CtrlsValueAccessorDirective),\n    multi: true\n  }])]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,UAAU,QAAe,eAAe;AAC5D,SAA+BC,iBAAiB,QAAQ,gBAAgB;;AAaxE,OAAM,MAAOC,2BAA2B;EAEpCC,eAAe;EAKfC,UAAU,CAACC,KAAQ;IACf,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EAEAC,gBAAgB,CAACC,QAA4B;IACzC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;EAEAC,iBAAiB,CAACC,EAAc;IAC5B,IAAI,CAACC,SAAS,GAAGD,EAAE;EACvB;EAEAE,WAAW,CAACN,KAAQ;IAChB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,IAAI,CAACE,QAAQ,EAAE;MACf,IAAI,CAACA,QAAQ,CAAC,IAAI,CAACF,KAAK,CAAC;;IAE7B,IAAI,IAAI,CAACK,SAAS,EAAE;MAChB,IAAI,CAACA,SAAS,EAAE;;EAExB;;AA3BSR,2BAA2B;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B;QAA3BA,2BAA2B;EAAAU;EAAAC;EAAAC,iCARzB,CACP;IACIC,OAAO,EAAEd,iBAAiB;IAC1Be,WAAW,EAAEhB,UAAU,CAAC,MAAME,2BAA2B,CAAC;IAC1De,KAAK,EAAE;GACV,CACJ;AAAA","names":["forwardRef","NG_VALUE_ACCESSOR","CtrlsValueAccessorDirective","constructor","writeValue","value","registerOnChange","onChange","registerOnTouched","fn","onTouched","updateValue","selectors","standalone","features","provide","useExisting","multi"],"sourceRoot":"","sources":["/Users/valeriorisuleo/Desktop/Archive/src/app/common/ctrls-value-accessor.directive.ts"],"sourcesContent":["import { Directive, forwardRef, Input } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n@Directive({\n    selector: \"[ctrlsValueAccessorDirective]\",\n    standalone: true,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => CtrlsValueAccessorDirective),\n            multi: true,\n        },\n    ],\n})\nexport class CtrlsValueAccessorDirective<T> implements ControlValueAccessor {\n\n    constructor() {}\n    private onChange: (value: T) => void;\n    private onTouched: () => void;\n    private value: T\n\n    writeValue(value: T) {\n        this.value = value;\n    }\n\n    registerOnChange(onChange: (value: T) => void) {\n        this.onChange = onChange;\n    }\n\n    registerOnTouched(fn: () => void) {\n        this.onTouched = fn;\n    }\n\n    updateValue(value: T) {\n        this.value = value;\n        if (this.onChange) {\n            this.onChange(this.value);\n        }\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}